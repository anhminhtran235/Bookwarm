type User {
    id: ID!
    username: String!
    email: String!
    avatar: String!
    createdAt: Date!
    cart: [CartItem]!
    orders: [ID]
    books: [Book]
}

type CartItem {
    id: ID!
    book: Book!
    quantity: Int!
}

input RegisterInput {
    username: String!
    email: String!
    password: String!
    avatar: String
}

input LoginInput {
    email: String!
    password: String!
}

input UpdateUserInput {
    username: String
    oldPassword: String
    newPassword: String
    avatar: String
}

extend type Query {
    findUserById(id: ID!): User!
    findAllUsers: [User]!
    getMe: User
}

extend type Mutation {
    register(registerInput: RegisterInput!): User!
    login(loginInput: LoginInput!): User!
    updateUser(updateInput: UpdateUserInput!): User!
    logout: String
    addToCart(bookId: ID!): CartItem!
    removeFromCart(bookId: ID!): SuccessBoolean!
}
